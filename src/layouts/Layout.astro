---
import "@fontsource-variable/inter";
import "@fontsource-variable/montagu-slab";
import {
  languageTag,
  availableLanguageTags,
  isAvailableLanguageTag,
} from "../paraglide/runtime";
import { getAbsoluteLocaleUrl } from "astro:i18n";
import { ViewTransitions } from "astro:transitions";
import Navbar from "../components/Navbar.astro";

interface Props {
  title: string;
}

const { title } = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

function removeLanguagePrefix(path: string) {
  const [maybeLanguage, ...rest] = path.split("/").filter(Boolean);
  return isAvailableLanguageTag(maybeLanguage) ? rest.join("/") : path;
}

const currentPathWithoutLanguage = removeLanguagePrefix(Astro.url.pathname);
---

<!doctype html>
<html lang={languageTag()}>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />

    <link rel="canonical" href={canonicalURL} />

    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content="Astro description" />

    {
      availableLanguageTags.map((lang) => (
        <link
          rel="alternate"
          hreflang={lang}
          href={getAbsoluteLocaleUrl(lang, currentPathWithoutLanguage)}
        />
      ))
    }

    <ViewTransitions />
  </head>
  <body class="bg-white text-zinc-900 dark:bg-zinc-800 dark:text-zinc-200">
    <Navbar />
    <slot />
    <script is:inline data-astro-rerun>
      if (
        localStorage.theme === "dark" ||
        (!("theme" in localStorage) &&
          window.matchMedia("(prefers-color-scheme: dark)").matches)
      ) {
        document.documentElement.classList.add("dark");
        localStorage.theme = "dark";
      } else {
        document.documentElement.classList.remove("dark");
        localStorage.theme = "light";
      }
    </script>
    <script>
      import Hotjar from "@hotjar/browser";
      import { Rive } from "@rive-app/canvas-lite";

      const siteId = 5025471;
      const hotjarVersion = 6;

      Hotjar.init(siteId, hotjarVersion);

      document.addEventListener("astro:page-load", () => {
        const r = new Rive({
          src: "../../scroll_down.riv",
          canvas: document.getElementById(
            "scroll-down-canvas",
          ) as HTMLCanvasElement,
          autoplay: true,
          onLoad: () => {
            r.resizeDrawingSurfaceToCanvas();
          },
        });
      });
    </script>
  </body>
</html>
